unclass(as.Date("1970-12-31"))
unclass(as.Date("1971-12-31"))
unclass(as.Date("1971-01-01"))
unclass(as.Date("1972-01-01"))
unclass(as.Date("1974-01-01"))
unclass(as.Date("1978-01-01"))
unclass(as.Date("1977-01-01"))
unclass(as.Date("1972-01-01"))
unclass(as.Date("1973-01-01"))
unclass(as.Date("1974-01-01"))
?rnorm
data(iris)
?iris
iris
vir <- identical(iris$Species == "virginica")
?identical
vir <- identical(iris$Species, "virginica")
vir
species <- iris$Species
species
vir <- species == "virginica"
vir
vir_sep <- iris[vir,"Sepal.Length"]
vir_sep
mena(vir_sep)
mean(vir_sep)
iris
data(mtcars)
?mtcars
a <- array(rnorm(2 * 2 * 10), c(2, 2, 10))
a
rnorm(2*2*10)
data(mtcars)
mtcars
tapply(mtcars$cyl, mtcars$mpg, mena)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
?with
summary(mtcars)
str(mtcars)
split(mtcars$mpg, mtcars$cyl)
data(airquality)
airquality
split(airquality[,1:4], airquality$Month)
split(airquality, airquality$Month)
?with
with(mtcars, tapply(mpg,cyl,mean))
tapply(mtcars$mpg, mtcars$cyl, mean)
mtcars
hp_cyl <- split(mtcars$hp, mtcars$cyl)
hp_cyl
mean(hp_cyl$8)
mean(hp_cyl$"8")
tapply(mtcars$hp, mtcars$cyl,mean)
mean(hp_cyl$"8")-mean(hp_cyl$"4")
ls
?ls
ls(hp_cyl)
ls(mtcars)
debug(ls)
ls(hp_cyl)
x <- data.frame("id"=1:10,"random"=rnorm(10))
x
ls(x)
data(mtcars)
data(iris)
ls(iris)
ls(mtcars)
str(mtcars)
str(iris)
invisible(x)
return(x)
str(return)
is.na(NA)
is.na(NaN)
Nan
NaN
tapply(iris$Sepal.Length, iris$Species, mena)
tapply(iris$Sepal.Length, iris$Species, mean)
rm(x)
rm
x <- list(NA, 2, 4, 5)
na.rm(x)
rm.na(x)
?mean
mean
library(swirl)
swirl()
install_from_swirl("Mathematical Biostatistics Boot Camp")
version
source("~/desktop/cachemean.R")
source("~/desktop/cachevector.R")
data(iris)
str(iris)
mean(iris$Petal.Width)
mean(iris$Petal.Width) m
mean(iris$Petal.Width) m <<- 3
m <<- 3
m<- 3
m<- 4
m <<- 3
rm(m)
rm(iris)
data(iris)
rm(iris)
f <- gl(3,5)
f
rm(f)
system.time()
?system.time()
?expr
??expr
?<<-
??<<-
rpois(5,2)
pois
?rpois
?set.speed
?set.seed
set.seed(1)
rpois(5,2)
rbinom(10,10,0.5)
rbinom(1,10,0.5)
rbinom(10,1,0.5)
rbinom(10,10,0.5)
set.seed(1)
rpois(5,2)
st.seed(10)
set.seed(10)
x <- rbinom(10,10,0.5)
e <- rnorm(10,0,20)
y <- 0.5 + 2*x + e
plot(x,y)
rpois
rpois(10,10)
hist(rpois(100,10))
hist(rpois(100,20))
hist(rpois(100,50))
hist(rpois(100,1))
hist(rpois(100,4))
?lm
lm(x ~ y)
lm(x ~ y)
system.time(lm(x ~ y))
set.seed(1)
rpois(5,2)
library()
library(swirl)
swirl()
5+7
x <- 5+7
x
y ,- x-3
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2+100
z*2+1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files())
args(list.files
)
old.dir <- getwd()
t
old.dir <- getwd()
dir.create("testdir")
setwd("~/testdir")
setwd("testdir")
setwd("testdir")
setwd("~/")
setwd("testdir")
file.create("mytest.R
")
file.create("mytest.R")
ls()
list.files)
list.files()
list.files()
file.exists("mytest.R")
file.exists("mytest.R")
file.info("mytest.R")
file.info("mytest.R")
fiel.rename("mytest.R", "mytest2.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
~/
file.path("mytest3.R")
dir.create("testdir2/testdir3")
dir.create("testdir2/testdir3", recursive=TRUE)
dir.delete("testdir2")
dir.create("testdir2/testdir3", recursive=TRUE)
unlink("testdir2", recursive=TRUE)
setwd("~/testdir")
setwd(old.dir)
unlink("testdir", recursive = T)
unlink("testdir", recursive = TRUE)
q
rm(list=ls())
ls()
list()
library()
library("swirl")
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
q()
library("swirl")
swirl()
1:20
pi:20
pi:10
15:1
?`:`
seq(1,20)
seq(1,10,by=-.5)
seq(1,10,by=0.5)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
my_seq
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0 , times=40)
rep(c(0,1,2) , times=10)
rep(c(0,1,2) , each=10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_char <- c(my_char,"Allan")
my_name <- c(my_char,"Allan")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world", sep = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X","Y","Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
4
swirl()
x <- c(44,NA,5,NA)
x*3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
library(swirl)
swirl()
my_vector <- 1:20
my_vectpr
my_vector
dim(my_vector)
length)my_vector
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
args(matrix)
my_matrix2 <- matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
library(swirl)
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins','twins')
xor(5==6,!FALSE)
ints <- sample(10)
ints
ints > 5
which(ints>7)
any(ints<0)
all(ints>0)
x <- c(1,3L,"a")
x <- (1,3L,"a")
x <- list(1,3L,"a")
x <- c(1,3L,"a")
as.list(x)
x
x <- list(1,3L,"a")
x
class(x[1])
class(x[2])
class(x[3])
x[3]
x[[3]
]
class(x[[3]])
class(x[[1]])
class(x[[2]])
class(x[[3]])
rm(x)
x <- c(69, 69, 65, 72, 50, 57, 58, 50, 56, 42)
mean(x)
sumary(x)
summary(x)
std()
sd()
?sd
sd(x)
mean(x) - sd(x)
library(datasets)
data(iris)
tapply(iris$Sepal.Length, iris$species, mean)
str(iris)
tapply(iris$Sepal.Length, iris$Species, mean)
rm(list=ls())
setwd("~/")
setwd("~/")
x <- c(39, 67, 74, 70, 43, 52, 68, 38, 64, 73)
summary(x)
sd(x)
sdp
psd
sd
count
str(x)
dim(x)
length(x)
sd(x) * sqrt((length(x)-1)/length(x))
message("a")
rm(list=ls())
library("swirl")
data()
library("datasets")
load("iris")
iris()
iris
x <- iris
x
rm(x)
install(RMongo)
install.packages("RMongo")
library("rJava")
rJava
library("RMongo")
?RMongo
?rJava
install.packages("quantmod")
library("quantmod")
getSymbol("AAPL")
getSymbols("AAPL")
AAPL
head("AAPL")
class("AAPL")
str("AAPL
")
barChart(AAPL)
AAPL[2]
tail(AAPL)
summary(AAPL)
as.list(APPL)
as.list(AAPL)
install.package("twitterR")
install.packages("twitterR")
install.packages("twitteR")
install.packages("twitteR")
rm(list=ls())
library("twiteeR")
library("twitteR")
library("RMongo")
?twitteR
install.packages("Quandl")
library("Quandl")
?Quandl
install.packages("rdatamarket")
install.packages("rga")
install.packages("RGA")
install.packages("RGoogleAnalytics")
install.packages("ganalytics")
library
?library
library()
rmongo()
RMongo()
install.packages("RMongo")
install.packages("RMongo")
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
load("iris")
?iris
iris <- iris
str(iris)
library("quantmod", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
getSymbols("AAPL")
str(AAPL)
head(AAPL)
getSymbols.yahoo
getSymbols.yahoo(AAPL)
getSymbols.yahoo("AAPL")
getSymbol("AAPL",src='yahoo')
getSymbols("AAPL",src='yahoo')
getSymbols(AAPL,src='yahoo')
getSymbols("AAPL",src='yahoo')
rm(AAPL)
getSymbols("AAPL",src='yahoo')
summary(AAPL)
getSymbols("AAPL")
summary(AAPL)
rm(list=ls()
)
set.seed(1)
rpois(5,2)
rpois(5,2)
set.seed(1)
rpois(5,2)
rpois(5,2)
set.seed(10)
x <- rep(0:1, each=5)
e <- rnorm(10,0,20)
y <- 0.5 + 2 * x + e
plot(x,y)
load("~/Desktop/datasciencecoursera/GetData/Quiz_2/.RData")
github_token
setwd("~/Desktop/doing_data_science")
load("~/Desktop/doing_data_science/.RData")
require(gdata)
install.packages("gdata")
require(gdata)
?read.xls
mh <- read.xls("./dds_datasets/dds_ch2_rollingsales/rollingsales_manhattan.xls", pattern = "BOROUGH")
head(mh)
str(mh)
summary(mh)
mh$SALE.PRICE.N <- as.numeric(gseb("[^[:digit:]]","",mh$SALE.PRICE))
mh$SALE.PRICE.N <- as.numeric(gsUb("[^[:digit:]]","",mh$SALE.PRICE))
mh$SALE.PRICE.N <- as.numeric(gsUb("[^[:digit:]]","",mh$SALE.PRICE))
mh$SALE.PRICE.N <- as.numeric(gsub("[^[:digit:]]","",mh$SALE.PRICE))
summary(mh)
count(is.na(mh$SALE.PRICE.N))
sum(is.na(mh$SALE.PRICE.N))
sum(!is.na(mh$SALE.PRICE.N))
sum(is.na(mh$SALE.PRICE.N))
names(mh) <- to.lower(names(mh))
names(mh) <- tolower(names(mh))
mh$gross.sqft <- as.numeric(gsub("[^[:digit:]]","",mh$gross.square.feet))
mh$land.sqft <- as.numeric(gsub("[^[:digit:]]","",mh$land.square.feet))
mh$sale.date <- as.Date(bk$sale.date)
mh$sale.date <- as.Date(mh$sale.date)
mh$year.built <- as.numeric(as.character(mh$year.built))
attach(mh)
hist(sale.price.n)
summary(sale.price.n)
count(sale.price.n)
length(sale.price.n)
hist(sale.price.n[sale.price.n>0])
hist(sale.price.n)
hist(sale.price.n[sale.price.n>0])
hist(gross.sqft[sale.proci.n==0])
hist(gross.sqft[sale.price.n==0])
detach(mh)
mh.sale <- mh[mh$sale.price.n != 0]
mh.sale <- mh[mh$sale.price.n != 0,]
plot(mh.sale$gross.sqft, mh.sale$sale.price.n)
plot(log(mh.sale$gross.sqft), log(mh.sale$sale.price.n))
q()
